{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "earnProfit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVirtualPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "virtualPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604080518082018252600781526626282a37b5b2b760c91b6020808301919091528251808401909352600383526213141560ea1b9083015260016000559060046200005e83826200011b565b5060056200006d82826200011b565b505050620001e7565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a157607f821691505b602082108103620000c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011657600081815260208120601f850160051c81016020861015620000f15750805b601f850160051c820191505b818110156200011257828155600101620000fd565b5050505b505050565b81516001600160401b0381111562000137576200013762000076565b6200014f816200014884546200008c565b84620000c8565b602080601f8311600181146200018757600084156200016e5750858301515b600019600386901b1c1916600185901b17855562000112565b600085815260208120601f198616915b82811015620001b85788860151825594840194600190910190840162000197565b5085821015620001d75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d4d80620001f76000396000f3fe6080604052600436106100e85760003560e01c806367b9a2861161008a578063a9059cbb11610059578063a9059cbb14610245578063dd62ed3e14610265578063e25aa5fa14610285578063e8078d941461029a57600080fd5b806367b9a286146101c557806370a08231146101da57806395d89b4114610210578063a457c2d71461022557600080fd5b806323b872dd116100c657806323b872dd14610167578063313ce5671461018757806339509351146101a35780635892f0d5146101c357600080fd5b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610148575b600080fd5b3480156100f957600080fd5b506101026102a2565b60405161010f9190610b42565b60405180910390f35b34801561012457600080fd5b50610138610133366004610bb3565b610334565b604051901515815260200161010f565b34801561015457600080fd5b506003545b60405190815260200161010f565b34801561017357600080fd5b50610138610182366004610bdd565b61034c565b34801561019357600080fd5b506040516012815260200161010f565b3480156101af57600080fd5b506101386101be366004610bb3565b610370565b005b3480156101d157600080fd5b506101c3610394565b3480156101e657600080fd5b506101596101f5366004610c19565b6001600160a01b031660009081526001602052604090205490565b34801561021c57600080fd5b50610102610494565b34801561023157600080fd5b50610138610240366004610bb3565b6104a3565b34801561025157600080fd5b50610138610260366004610bb3565b61051e565b34801561027157600080fd5b50610159610280366004610c3b565b61052c565b34801561029157600080fd5b50610159610557565b6101c3610571565b6060600480546102b190610c6e565b80601f01602080910402602001604051908101604052809291908181526020018280546102dd90610c6e565b801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b5050505050905090565b6000336103428185856105b2565b5060019392505050565b60003361035a8582856106d7565b610365858585610751565b506001949350505050565b600033610342818585610383838361052c565b61038d9190610cbe565b6105b2565b565b61039c6108fc565b336000908152600160205260408120546003549091816103bc8185610cbe565b6103c69190610cd6565b33600090815260076020526040812054919250906103e5908390610cf8565b604051909150600090339083908381818185875af1925050503d806000811461042a576040519150601f19603f3d011682016040523d82523d6000602084013e61042f565b606091505b505090508061047b5760405162461bcd60e51b8152602060048201526013602482015272195d1a081d1c985b9cd9995c8819985a5b1959606a1b60448201526064015b60405180910390fd5b6104853386610955565b50505050506103926001600055565b6060600580546102b190610c6e565b600033816104b1828661052c565b9050838110156105115760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610472565b61036582868684036105b2565b600033610342818585610751565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600061056260035490565b61056c9047610cd6565b905090565b6105796108fc565b3360009081526007602052604081208054349290610598908490610cbe565b909155506105a890503334610a81565b6103926001600055565b6001600160a01b0383166106145760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610472565b6001600160a01b0382166106755760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610472565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106e3848461052c565b9050600019811461074b578181101561073e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610472565b61074b84848484036105b2565b50505050565b6001600160a01b0383166107b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610472565b6001600160a01b0382166108175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610472565b6001600160a01b0383166000908152600160205260409020548181101561088f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610472565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108ef9086815260200190565b60405180910390a361074b565b60026000540361094e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610472565b6002600055565b6001600160a01b0382166109b55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610472565b6001600160a01b03821660009081526001602052604090205481811015610a295760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610472565b6001600160a01b03831660008181526001602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106ca565b6001600160a01b038216610ad75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610472565b8060036000828254610ae99190610cbe565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610b6f57858101830151858201604001528201610b53565b81811115610b81576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bae57600080fd5b919050565b60008060408385031215610bc657600080fd5b610bcf83610b97565b946020939093013593505050565b600080600060608486031215610bf257600080fd5b610bfb84610b97565b9250610c0960208501610b97565b9150604084013590509250925092565b600060208284031215610c2b57600080fd5b610c3482610b97565b9392505050565b60008060408385031215610c4e57600080fd5b610c5783610b97565b9150610c6560208401610b97565b90509250929050565b600181811c90821680610c8257607f821691505b602082108103610ca257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cd157610cd1610ca8565b500190565b600082610cf357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610d1257610d12610ca8565b50029056fea26469706673582212203735d6082fa0e0407908a1daa9dd24f242847f045eb7c4a6144f8721ee920e0a64736f6c634300080f0033",
    "sourceMap": "2239:1523:29:-:0;;;;;;;;;;;;-1:-1:-1;1976:113:18;;;;;;;;;;;-1:-1:-1;;;1976:113:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:18;;;;1716:1:17;-1:-1:-1;1821:22:17;1976:113:18;2042:5;:13;1976:113;2042:5;:13;:::i;:::-;-1:-1:-1;2065:7:18;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;2239:1523:29;;14:127:31;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:31;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:31;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:31;;;2580:26;2531:89;-1:-1:-1;;1335:1:31;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:31;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:31;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:31;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:31:o;:::-;2239:1523:29;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100e85760003560e01c806367b9a2861161008a578063a9059cbb11610059578063a9059cbb14610245578063dd62ed3e14610265578063e25aa5fa14610285578063e8078d941461029a57600080fd5b806367b9a286146101c557806370a08231146101da57806395d89b4114610210578063a457c2d71461022557600080fd5b806323b872dd116100c657806323b872dd14610167578063313ce5671461018757806339509351146101a35780635892f0d5146101c357600080fd5b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610148575b600080fd5b3480156100f957600080fd5b506101026102a2565b60405161010f9190610b42565b60405180910390f35b34801561012457600080fd5b50610138610133366004610bb3565b610334565b604051901515815260200161010f565b34801561015457600080fd5b506003545b60405190815260200161010f565b34801561017357600080fd5b50610138610182366004610bdd565b61034c565b34801561019357600080fd5b506040516012815260200161010f565b3480156101af57600080fd5b506101386101be366004610bb3565b610370565b005b3480156101d157600080fd5b506101c3610394565b3480156101e657600080fd5b506101596101f5366004610c19565b6001600160a01b031660009081526001602052604090205490565b34801561021c57600080fd5b50610102610494565b34801561023157600080fd5b50610138610240366004610bb3565b6104a3565b34801561025157600080fd5b50610138610260366004610bb3565b61051e565b34801561027157600080fd5b50610159610280366004610c3b565b61052c565b34801561029157600080fd5b50610159610557565b6101c3610571565b6060600480546102b190610c6e565b80601f01602080910402602001604051908101604052809291908181526020018280546102dd90610c6e565b801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b5050505050905090565b6000336103428185856105b2565b5060019392505050565b60003361035a8582856106d7565b610365858585610751565b506001949350505050565b600033610342818585610383838361052c565b61038d9190610cbe565b6105b2565b565b61039c6108fc565b336000908152600160205260408120546003549091816103bc8185610cbe565b6103c69190610cd6565b33600090815260076020526040812054919250906103e5908390610cf8565b604051909150600090339083908381818185875af1925050503d806000811461042a576040519150601f19603f3d011682016040523d82523d6000602084013e61042f565b606091505b505090508061047b5760405162461bcd60e51b8152602060048201526013602482015272195d1a081d1c985b9cd9995c8819985a5b1959606a1b60448201526064015b60405180910390fd5b6104853386610955565b50505050506103926001600055565b6060600580546102b190610c6e565b600033816104b1828661052c565b9050838110156105115760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610472565b61036582868684036105b2565b600033610342818585610751565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600061056260035490565b61056c9047610cd6565b905090565b6105796108fc565b3360009081526007602052604081208054349290610598908490610cbe565b909155506105a890503334610a81565b6103926001600055565b6001600160a01b0383166106145760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610472565b6001600160a01b0382166106755760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610472565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106e3848461052c565b9050600019811461074b578181101561073e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610472565b61074b84848484036105b2565b50505050565b6001600160a01b0383166107b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610472565b6001600160a01b0382166108175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610472565b6001600160a01b0383166000908152600160205260409020548181101561088f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610472565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108ef9086815260200190565b60405180910390a361074b565b60026000540361094e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610472565b6002600055565b6001600160a01b0382166109b55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610472565b6001600160a01b03821660009081526001602052604090205481811015610a295760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610472565b6001600160a01b03831660008181526001602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106ca565b6001600160a01b038216610ad75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610472565b8060036000828254610ae99190610cbe565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610b6f57858101830151858201604001528201610b53565b81811115610b81576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bae57600080fd5b919050565b60008060408385031215610bc657600080fd5b610bcf83610b97565b946020939093013593505050565b600080600060608486031215610bf257600080fd5b610bfb84610b97565b9250610c0960208501610b97565b9150604084013590509250925092565b600060208284031215610c2b57600080fd5b610c3482610b97565b9392505050565b60008060408385031215610c4e57600080fd5b610c5783610b97565b9150610c6560208401610b97565b90509250929050565b600181811c90821680610c8257607f821691505b602082108103610ca257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cd157610cd1610ca8565b500190565b600082610cf357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610d1257610d12610ca8565b50029056fea26469706673582212203735d6082fa0e0407908a1daa9dd24f242847f045eb7c4a6144f8721ee920e0a64736f6c634300080f0033",
    "sourceMap": "2239:1523:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;-1:-1:-1;4431:197:18;;;;;:::i;:::-;;:::i;:::-;;;1218:14:31;;1211:22;1193:41;;1181:2;1166:18;4431:197:18;1053:187:31;3242:106:18;;;;;;;;;;-1:-1:-1;3329:12:18;;3242:106;;;1391:25:31;;;1379:2;1364:18;3242:106:18;1245:177:31;5190:286:18;;;;;;;;;;-1:-1:-1;5190:286:18;;;;;:::i;:::-;;:::i;3091:91::-;;;;;;;;;;-1:-1:-1;3091:91:18;;3173:2;1902:36:31;;1890:2;1875:18;3091:91:18;1760:184:31;5871:234:18;;;;;;;;;;-1:-1:-1;5871:234:18;;;;;:::i;:::-;;:::i;3719:41:29:-;;2764:452;;;;;;;;;;;;;:::i;3406:125:18:-;;;;;;;;;;-1:-1:-1;3406:125:18;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:18;3480:7;3506:18;;;:9;:18;;;;;;;3406:125;2365:102;;;;;;;;;;;;;:::i;6592:427::-;;;;;;;;;;-1:-1:-1;6592:427:18;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;;;;;-1:-1:-1;3727:189:18;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;;;;;-1:-1:-1;3974:149:18;;;;;:::i;:::-;;:::i;3531:141:29:-;;;;;;;;;;;;;:::i;2531:147::-;;;:::i;2154:98:18:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:26;4568:32:18;719:10:26;4584:7:18;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:18;;4431:197;-1:-1:-1;;;4431:197:18:o;5190:286::-;5317:4;719:10:26;5373:38:18;5389:4;719:10:26;5404:6:18;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:18;;5190:286;-1:-1:-1;;;;5190:286:18:o;5871:234::-;5959:4;719:10:26;6013:64:18;719:10:26;6029:7:18;6066:10;6038:25;719:10:26;6029:7:18;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;3719:41:29:-;:::o;2764:452::-;2261:21:17;:19;:21::i;:::-;2855:10:29::1;2823:19;3506:18:18::0;;;:9;:18;;;;;;3329:12;;3506:18;;3329:12;2946:27:29::1;3329:12:18::0;3506:18;2946:27:29::1;:::i;:::-;2945:45;;;;:::i;:::-;3036:10;3000:19;3022:25:::0;;;:13:::1;:25;::::0;;;;;2923:67;;-1:-1:-1;3000:19:29;3022:39:::1;::::0;2923:67;;3022:39:::1;:::i;:::-;3086;::::0;3000:61;;-1:-1:-1;3073:7:29::1;::::0;3086:10:::1;::::0;3000:61;;3073:7;3086:39;3073:7;3086:39;3000:61;3086:10;:39:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3072:53;;;3143:2;3135:34;;;::::0;-1:-1:-1;;;3135:34:29;;3862:2:31;3135:34:29::1;::::0;::::1;3844:21:31::0;3901:2;3881:18;;;3874:30;-1:-1:-1;;;3920:18:31;;;3913:49;3979:18;;3135:34:29::1;;;;;;;;;3179:30;3185:10;3197:11;3179:5;:30::i;:::-;2813:403;;;;;2303:20:17::0;1716:1;2809:7;:22;2629:209;2365:102:18;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:26;6685:4:18;6766:25;719:10:26;6783:7:18;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:18;;4210:2:31;6801:85:18;;;4192:21:31;4249:2;4229:18;;;4222:30;4288:34;4268:18;;;4261:62;-1:-1:-1;;;4339:18:31;;;4332:35;4384:19;;6801:85:18;4008:401:31;6801:85:18;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:26;3860:28:18;719:10:26;3877:2:18;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:18;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;3531:141:29:-;3581:20;3652:13;3329:12:18;;;3242:106;3652:13:29;3628:37;;:21;:37;:::i;:::-;3613:52;;3531:141;:::o;2531:147::-;2261:21:17;:19;:21::i;:::-;2609:10:29::1;2595:25;::::0;;;:13:::1;:25;::::0;;;;:38;;2624:9:::1;::::0;2595:25;:38:::1;::::0;2624:9;;2595:38:::1;:::i;:::-;::::0;;;-1:-1:-1;2643:28:29::1;::::0;-1:-1:-1;2649:10:29::1;2661:9;2643:5;:28::i;:::-;2303:20:17::0;1716:1;2809:7;:22;2629:209;10504:370:18;-1:-1:-1;;;;;10635:19:18;;10627:68;;;;-1:-1:-1;;;10627:68:18;;4616:2:31;10627:68:18;;;4598:21:31;4655:2;4635:18;;;4628:30;4694:34;4674:18;;;4667:62;-1:-1:-1;;;4745:18:31;;;4738:34;4789:19;;10627:68:18;4414:400:31;10627:68:18;-1:-1:-1;;;;;10713:21:18;;10705:68;;;;-1:-1:-1;;;10705:68:18;;5021:2:31;10705:68:18;;;5003:21:31;5060:2;5040:18;;;5033:30;5099:34;5079:18;;;5072:62;-1:-1:-1;;;5150:18:31;;;5143:32;5192:19;;10705:68:18;4819:398:31;10705:68:18;-1:-1:-1;;;;;10784:18:18;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1391:25:31;;;10835:32:18;;1364:18:31;10835:32:18;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:18;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:18;;5424:2:31;11404:68:18;;;5406:21:31;5463:2;5443:18;;;5436:30;5502:31;5482:18;;;5475:59;5551:18;;11404:68:18;5222:353:31;11404:68:18;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:18;;7591:68;;;;-1:-1:-1;;;7591:68:18;;5782:2:31;7591:68:18;;;5764:21:31;5821:2;5801:18;;;5794:30;5860:34;5840:18;;;5833:62;-1:-1:-1;;;5911:18:31;;;5904:35;5956:19;;7591:68:18;5580:401:31;7591:68:18;-1:-1:-1;;;;;7677:16:18;;7669:64;;;;-1:-1:-1;;;7669:64:18;;6188:2:31;7669:64:18;;;6170:21:31;6227:2;6207:18;;;6200:30;6266:34;6246:18;;;6239:62;-1:-1:-1;;;6317:18:31;;;6310:33;6360:19;;7669:64:18;5986:399:31;7669:64:18;-1:-1:-1;;;;;7815:15:18;;7793:19;7815:15;;;:9;:15;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:18;;6592:2:31;7840:72:18;;;6574:21:31;6631:2;6611:18;;;6604:30;6670:34;6650:18;;;6643:62;-1:-1:-1;;;6721:18:31;;;6714:36;6767:19;;7840:72:18;6390:402:31;7840:72:18;-1:-1:-1;;;;;7946:15:18;;;;;;;:9;:15;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;;;;;7978:6;1391:25:31;;1379:2;1364:18;;1245:177;8210:26:18;;;;;;;;8247:37;9422:659;2336:287:17;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:17;;6999:2:31;2460:63:17;;;6981:21:31;7038:2;7018:18;;;7011:30;7077:33;7057:18;;;7050:61;7128:18;;2460:63:17;6797:355:31;2460:63:17;1759:1;2598:7;:18;2336:287::o;9422:659:18:-;-1:-1:-1;;;;;9505:21:18;;9497:67;;;;-1:-1:-1;;;9497:67:18;;7359:2:31;9497:67:18;;;7341:21:31;7398:2;7378:18;;;7371:30;7437:34;7417:18;;;7410:62;-1:-1:-1;;;7488:18:31;;;7481:31;7529:19;;9497:67:18;7157:397:31;9497:67:18;-1:-1:-1;;;;;9660:18:18;;9635:22;9660:18;;;:9;:18;;;;;;9696:24;;;;9688:71;;;;-1:-1:-1;;;9688:71:18;;7761:2:31;9688:71:18;;;7743:21:31;7800:2;7780:18;;;7773:30;7839:34;7819:18;;;7812:62;-1:-1:-1;;;7890:18:31;;;7883:32;7932:19;;9688:71:18;7559:398:31;9688:71:18;-1:-1:-1;;;;;9793:18:18;;;;;;:9;:18;;;;;;;;9814:23;;;9793:44;;9930:12;:22;;;;;;;9978:37;1391:25:31;;;9793:18:18;;;9978:37;;1364:18:31;9978:37:18;1245:177:31;8567:535:18;-1:-1:-1;;;;;8650:21:18;;8642:65;;;;-1:-1:-1;;;8642:65:18;;8164:2:31;8642:65:18;;;8146:21:31;8203:2;8183:18;;;8176:30;8242:33;8222:18;;;8215:61;8293:18;;8642:65:18;7962:355:31;8642:65:18;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:18;;;;;;:9;:18;;;;;;;;:28;;;;;;8999:37;1391:25:31;;;8999:37:18;;1364:18:31;8999:37:18;;;;;;;8567:535;;:::o;14:597:31:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:31;574:15;-1:-1:-1;;570:29:31;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:31:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:31;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:31:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:31:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:127::-;2851:10;2846:3;2842:20;2839:1;2832:31;2882:4;2879:1;2872:15;2906:4;2903:1;2896:15;2922:128;2962:3;2993:1;2989:6;2986:1;2983:13;2980:39;;;2999:18;;:::i;:::-;-1:-1:-1;3035:9:31;;2922:128::o;3055:217::-;3095:1;3121;3111:132;;3165:10;3160:3;3156:20;3153:1;3146:31;3200:4;3197:1;3190:15;3228:4;3225:1;3218:15;3111:132;-1:-1:-1;3257:9:31;;3055:217::o;3277:168::-;3317:7;3383:1;3379;3375:6;3371:14;3368:1;3365:21;3360:1;3353:9;3346:17;3342:45;3339:71;;;3390:18;;:::i;:::-;-1:-1:-1;3430:9:31;;3277:168::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addLiquidity()": "e8078d94",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "earnProfit()": "5892f0d5",
    "getVirtualPrice()": "e25aa5fa",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "removeLiquidity()": "67b9a286",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"earnProfit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVirtualPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"virtualPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ReadOnly.sol\":\"ReadOnlyPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol\":{\"keccak256\":\"0xd072bae157dbfae22652801c8811296d7b3311d0432407fbd4d2e961eac63f0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607b2aabf33cfa043ae1b6f0c7dca80718d440e6d980c6afac734851c69ede75\",\"dweb:/ipfs/QmPGzMcypjgArPY4PUKbgJcVh5m9aZKos6bxbTwzZHyDVn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd750324b0fc76aa4c1b0aadf7cab03b3d1cc4d5744348c18ba2b99dbdbe1758d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d53cbf8e2e469a6422fb61d8636af3ec39d8e10e7f4d99d625bdd36d4b8ddf34\",\"dweb:/ipfs/QmNhvk3jmfgquVki2V7gNmTWTMeNwEPCnetybeBntQtsyJ\"]},\"src/ReadOnly.sol\":{\"keccak256\":\"0xc297f5853eb074aad4416e5496f64444527a2c979433ce1a229415b58d679feb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5368e416fd95176e43c8f8bcb343ac6933ac555615a635afc686abd9c3b8ba4c\",\"dweb:/ipfs/QmXcimkUR64fi1yYCByFgjXv5eu1P1emjeFQjuYKnNpTCd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "earnProfit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getVirtualPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "virtualPrice",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ReadOnly.sol": "ReadOnlyPool"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc",
        "urls": [
          "bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010",
          "dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol": {
        "keccak256": "0xd072bae157dbfae22652801c8811296d7b3311d0432407fbd4d2e961eac63f0a",
        "urls": [
          "bzz-raw://607b2aabf33cfa043ae1b6f0c7dca80718d440e6d980c6afac734851c69ede75",
          "dweb:/ipfs/QmPGzMcypjgArPY4PUKbgJcVh5m9aZKos6bxbTwzZHyDVn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d",
        "urls": [
          "bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96",
          "dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
        "keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
        "urls": [
          "bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
          "dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0xd750324b0fc76aa4c1b0aadf7cab03b3d1cc4d5744348c18ba2b99dbdbe1758d",
        "urls": [
          "bzz-raw://d53cbf8e2e469a6422fb61d8636af3ec39d8e10e7f4d99d625bdd36d4b8ddf34",
          "dweb:/ipfs/QmNhvk3jmfgquVki2V7gNmTWTMeNwEPCnetybeBntQtsyJ"
        ],
        "license": "MIT"
      },
      "src/ReadOnly.sol": {
        "keccak256": "0xc297f5853eb074aad4416e5496f64444527a2c979433ce1a229415b58d679feb",
        "urls": [
          "bzz-raw://5368e416fd95176e43c8f8bcb343ac6933ac555615a635afc686abd9c3b8ba4c",
          "dweb:/ipfs/QmXcimkUR64fi1yYCByFgjXv5eu1P1emjeFQjuYKnNpTCd"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ReadOnly.sol",
    "id": 31798,
    "exportedSymbols": {
      "Address": [
        31484
      ],
      "Context": [
        31506
      ],
      "ERC20": [
        29757
      ],
      "ERC777": [
        30951
      ],
      "IERC1820Registry": [
        31596
      ],
      "IERC20": [
        29835
      ],
      "IERC20Metadata": [
        29860
      ],
      "IERC777": [
        31114
      ],
      "IERC777Recipient": [
        31134
      ],
      "IERC777Sender": [
        31154
      ],
      "ReadOnlyPool": [
        31797
      ],
      "ReentrancyGuard": [
        29170
      ],
      "VulnerableDeFiContract": [
        31683
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:3728:29",
    "nodes": [
      {
        "id": 31651,
        "nodeType": "PragmaDirective",
        "src": "35:23:29",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 31652,
        "nodeType": "ImportDirective",
        "src": "60:71:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31798,
        "sourceUnit": 29758,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31653,
        "nodeType": "ImportDirective",
        "src": "132:73:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31798,
        "sourceUnit": 30952,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31654,
        "nodeType": "ImportDirective",
        "src": "206:72:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31798,
        "sourceUnit": 29836,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31655,
        "nodeType": "ImportDirective",
        "src": "279:72:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31798,
        "sourceUnit": 29836,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31656,
        "nodeType": "ImportDirective",
        "src": "352:78:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "../lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31798,
        "sourceUnit": 29171,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31683,
        "nodeType": "ContractDefinition",
        "src": "1902:335:29",
        "nodes": [
          {
            "id": 31659,
            "nodeType": "VariableDeclaration",
            "src": "1940:25:29",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "1961:4:29",
            "scope": 31683,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
              "typeString": "contract ReadOnlyPool"
            },
            "typeName": {
              "id": 31658,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31657,
                "name": "ReadOnlyPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31797,
                "src": "1940:12:29"
              },
              "referencedDeclaration": 31797,
              "src": "1940:12:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
                "typeString": "contract ReadOnlyPool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 31661,
            "nodeType": "VariableDeclaration",
            "src": "1971:27:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "c52cbd34",
            "mutability": "mutable",
            "name": "lpTokenPrice",
            "nameLocation": "1986:12:29",
            "scope": 31683,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31660,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1971:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31672,
            "nodeType": "FunctionDefinition",
            "src": "2005:61:29",
            "nodes": [],
            "body": {
              "id": 31671,
              "nodeType": "Block",
              "src": "2037:29:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31667,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31659,
                      "src": "2047:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
                        "typeString": "contract ReadOnlyPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31668,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31664,
                      "src": "2054:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
                        "typeString": "contract ReadOnlyPool"
                      }
                    },
                    "src": "2047:12:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
                      "typeString": "contract ReadOnlyPool"
                    }
                  },
                  "id": 31670,
                  "nodeType": "ExpressionStatement",
                  "src": "2047:12:29"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 31665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31664,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "2030:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 31672,
                  "src": "2017:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
                    "typeString": "contract ReadOnlyPool"
                  },
                  "typeName": {
                    "id": 31663,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31662,
                      "name": "ReadOnlyPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31797,
                      "src": "2017:12:29"
                    },
                    "referencedDeclaration": 31797,
                    "src": "2017:12:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
                      "typeString": "contract ReadOnlyPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2016:20:29"
            },
            "returnParameters": {
              "id": 31666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2037:0:29"
            },
            "scope": 31683,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31682,
            "nodeType": "FunctionDefinition",
            "src": "2147:88:29",
            "nodes": [],
            "body": {
              "id": 31681,
              "nodeType": "Block",
              "src": "2181:54:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31675,
                      "name": "lpTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31661,
                      "src": "2191:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 31676,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31659,
                          "src": "2206:4:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
                            "typeString": "contract ReadOnlyPool"
                          }
                        },
                        "id": 31677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getVirtualPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31792,
                        "src": "2206:20:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 31678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2206:22:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2191:37:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31680,
                  "nodeType": "ExpressionStatement",
                  "src": "2191:37:29"
                }
              ]
            },
            "functionSelector": "fb76f708",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "snapshotPrice",
            "nameLocation": "2156:13:29",
            "parameters": {
              "id": 31673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2169:2:29"
            },
            "returnParameters": {
              "id": 31674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:0:29"
            },
            "scope": 31683,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "VulnerableDeFiContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31683
        ],
        "name": "VulnerableDeFiContract",
        "nameLocation": "1911:22:29",
        "scope": 31798,
        "usedErrors": []
      },
      {
        "id": 31797,
        "nodeType": "ContractDefinition",
        "src": "2239:1523:29",
        "nodes": [
          {
            "id": 31693,
            "nodeType": "VariableDeclaration",
            "src": "2349:39:29",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "acceptedTokens",
            "nameLocation": "2374:14:29",
            "scope": 31797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 31692,
              "keyType": {
                "id": 31690,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2357:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2349:24:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 31691,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2368:4:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31697,
            "nodeType": "VariableDeclaration",
            "src": "2394:41:29",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "originalStake",
            "nameLocation": "2422:13:29",
            "scope": 31797,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 31696,
              "keyType": {
                "id": 31694,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2402:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2394:27:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 31695,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2413:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 31718,
            "nodeType": "FunctionDefinition",
            "src": "2531:147:29",
            "nodes": [],
            "body": {
              "id": 31717,
              "nodeType": "Block",
              "src": "2585:93:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 31702,
                        "name": "originalStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31697,
                        "src": "2595:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 31705,
                      "indexExpression": {
                        "expression": {
                          "id": 31703,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2609:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2609:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2595:25:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 31706,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2624:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 31707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2624:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2595:38:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31709,
                  "nodeType": "ExpressionStatement",
                  "src": "2595:38:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31711,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2649:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2649:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 31713,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2661:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2661:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31710,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29574,
                      "src": "2643:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2643:28:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31716,
                  "nodeType": "ExpressionStatement",
                  "src": "2643:28:29"
                }
              ]
            },
            "functionSelector": "e8078d94",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31700,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31699,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29146,
                  "src": "2572:12:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "2572:12:29"
              }
            ],
            "name": "addLiquidity",
            "nameLocation": "2540:12:29",
            "parameters": {
              "id": 31698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2552:2:29"
            },
            "returnParameters": {
              "id": 31701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2585:0:29"
            },
            "scope": 31797,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31775,
            "nodeType": "FunctionDefinition",
            "src": "2764:452:29",
            "nodes": [],
            "body": {
              "id": 31774,
              "nodeType": "Block",
              "src": "2813:403:29",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31724,
                      "mutability": "mutable",
                      "name": "numLPTokens",
                      "nameLocation": "2831:11:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 31774,
                      "src": "2823:19:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2823:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31729,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31726,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2855:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2855:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31725,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29269,
                      "src": "2845:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 31728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2845:21:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2823:43:29"
                },
                {
                  "assignments": [
                    31731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31731,
                      "mutability": "mutable",
                      "name": "totalLPTokens",
                      "nameLocation": "2884:13:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 31774,
                      "src": "2876:21:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31730,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2876:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31734,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31732,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29255,
                      "src": "2900:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 31733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2900:13:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2876:37:29"
                },
                {
                  "assignments": [
                    31736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31736,
                      "mutability": "mutable",
                      "name": "profitShare",
                      "nameLocation": "2931:11:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 31774,
                      "src": "2923:19:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31735,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2923:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31743,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31737,
                            "name": "numLPTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31724,
                            "src": "2946:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 31738,
                            "name": "totalLPTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31731,
                            "src": "2960:13:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2946:27:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 31740,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2945:29:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 31741,
                      "name": "totalLPTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31731,
                      "src": "2977:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2945:45:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2923:67:29"
                },
                {
                  "assignments": [
                    31745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31745,
                      "mutability": "mutable",
                      "name": "ethToReturn",
                      "nameLocation": "3008:11:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 31774,
                      "src": "3000:19:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31744,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3000:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31752,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 31746,
                        "name": "originalStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31697,
                        "src": "3022:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 31749,
                      "indexExpression": {
                        "expression": {
                          "id": 31747,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3036:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3036:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3022:25:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 31750,
                      "name": "profitShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31736,
                      "src": "3050:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3022:39:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3000:61:29"
                },
                {
                  "assignments": [
                    31754,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31754,
                      "mutability": "mutable",
                      "name": "ok",
                      "nameLocation": "3078:2:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 31774,
                      "src": "3073:7:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 31753,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3073:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 31762,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 31760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3122:2:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 31755,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3086:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3086:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "3086:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 31759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 31758,
                          "name": "ethToReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31745,
                          "src": "3109:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3086:35:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 31761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3086:39:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3072:53:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31764,
                        "name": "ok",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31754,
                        "src": "3143:2:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "657468207472616e73666572206661696c6564",
                        "id": 31765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3147:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a69c33a31366b5ad9c69aaaef26c7a480eb3e9d8933ce9058ce58258f3471a3",
                          "typeString": "literal_string \"eth transfer failed\""
                        },
                        "value": "eth transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a69c33a31366b5ad9c69aaaef26c7a480eb3e9d8933ce9058ce58258f3471a3",
                          "typeString": "literal_string \"eth transfer failed\""
                        }
                      ],
                      "id": 31763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3135:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3135:34:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31767,
                  "nodeType": "ExpressionStatement",
                  "src": "3135:34:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 31769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3185:3:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 31770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3185:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31771,
                        "name": "numLPTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31724,
                        "src": "3197:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31768,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29646,
                      "src": "3179:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 31772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3179:30:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31773,
                  "nodeType": "ExpressionStatement",
                  "src": "3179:30:29"
                }
              ]
            },
            "functionSelector": "67b9a286",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31721,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31720,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29146,
                  "src": "2800:12:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "2800:12:29"
              }
            ],
            "name": "removeLiquidity",
            "nameLocation": "2773:15:29",
            "parameters": {
              "id": 31719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2788:2:29"
            },
            "returnParameters": {
              "id": 31722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2813:0:29"
            },
            "scope": 31797,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31792,
            "nodeType": "FunctionDefinition",
            "src": "3531:141:29",
            "nodes": [],
            "body": {
              "id": 31791,
              "nodeType": "Block",
              "src": "3603:69:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 31789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31780,
                      "name": "virtualPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31778,
                      "src": "3613:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31783,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3636:4:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
                                "typeString": "contract ReadOnlyPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ReadOnlyPool_$31797",
                                "typeString": "contract ReadOnlyPool"
                              }
                            ],
                            "id": 31782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3628:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31781,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3628:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3628:13:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3628:21:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 31786,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29255,
                          "src": "3652:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 31787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3652:13:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3628:37:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3613:52:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31790,
                  "nodeType": "ExpressionStatement",
                  "src": "3613:52:29"
                }
              ]
            },
            "functionSelector": "e25aa5fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVirtualPrice",
            "nameLocation": "3540:15:29",
            "parameters": {
              "id": 31776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3555:2:29"
            },
            "returnParameters": {
              "id": 31779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31778,
                  "mutability": "mutable",
                  "name": "virtualPrice",
                  "nameLocation": "3589:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 31792,
                  "src": "3581:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3580:22:29"
            },
            "scope": 31797,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31796,
            "nodeType": "FunctionDefinition",
            "src": "3719:41:29",
            "nodes": [],
            "body": {
              "id": 31795,
              "nodeType": "Block",
              "src": "3758:2:29",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "5892f0d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "earnProfit",
            "nameLocation": "3728:10:29",
            "parameters": {
              "id": 31793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3738:2:29"
            },
            "returnParameters": {
              "id": 31794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3758:0:29"
            },
            "scope": 31797,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31684,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29170,
              "src": "2264:15:29"
            },
            "id": 31685,
            "nodeType": "InheritanceSpecifier",
            "src": "2264:15:29"
          },
          {
            "arguments": [
              {
                "hexValue": "4c50546f6b656e",
                "id": 31687,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2287:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_91896885eb10c3c73de18aef4dd028882060740275c7a0f7d08a98d2ad73965d",
                  "typeString": "literal_string \"LPToken\""
                },
                "value": "LPToken"
              },
              {
                "hexValue": "4c5054",
                "id": 31688,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2298:5:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_32e82afd8218e1d9053bf5b198b85ca1af3dff4739f28e3618abcbfacb818cfa",
                  "typeString": "literal_string \"LPT\""
                },
                "value": "LPT"
              }
            ],
            "baseName": {
              "id": 31686,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29757,
              "src": "2281:5:29"
            },
            "id": 31689,
            "nodeType": "InheritanceSpecifier",
            "src": "2281:23:29"
          }
        ],
        "canonicalName": "ReadOnlyPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31797,
          29757,
          29860,
          29835,
          31506,
          29170
        ],
        "name": "ReadOnlyPool",
        "nameLocation": "2248:12:29",
        "scope": 31798,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 29
}